// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <matrix/math.hpp>

namespace sym
{

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: syncState
 *
 * Args:
 *     dt: Scalar
 *     state: Matrix31
 *     acc: Scalar
 *
 * Outputs:
 *     sync_state: Matrix31
 */
template <typename Scalar>
void Syncstate(const Scalar dt, const matrix::Matrix<Scalar, 3, 1> &state, const Scalar acc,
	       matrix::Matrix<Scalar, 3, 1> *const sync_state = nullptr)
{
	// Total ops: 8

	// Input arrays

	// Intermediate terms (1)
	const Scalar _tmp0 = -acc * dt + state(1, 0);

	// Output terms (1)
	if (sync_state != nullptr) {
		matrix::Matrix<Scalar, 3, 1> &_sync_state = (*sync_state);

		_sync_state(0, 0) = _tmp0 * dt + Scalar(0.5) * acc * std::pow(dt, Scalar(2)) + state(0, 0);
		_sync_state(1, 0) = _tmp0;
		_sync_state(2, 0) = state(2, 0);
	}
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
